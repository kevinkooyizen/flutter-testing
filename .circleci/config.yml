# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  flutter: circleci/flutter@1.0.0
  gcp-cli: circleci/gcp-cli@2.2.0
  codecov: codecov/codecov@3.2.2

executors:
  cirrusci-flutter:
    docker:
      - image: cirrusci/flutter:2.8.0
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
      GRADLE_OPTS: '-Xmx1024m -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1024m -XX:+HeapDumpOnOutOfMemoryError"'
  small-docker-image:
    docker:
      - image: cimg/base:stable
    resource_class: small

jobs:
  checkout-and-setup:
    executor: small-docker-image
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  flutter-widget-test:
    executor: cirrusci-flutter
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run: flutter pub global activate junitreport
      - run: mkdir -p test-results
      - run:
          name: Import all necessary files for coverage
          command: sh scripts/import_files_coverage.sh flutter_testing
      - run:
          name: Run unit tests
          command: flutter test -x golden --machine --coverage | ~/.pub-cache/bin/tojunit --output test-results/flutter.xml
      - persist_to_workspace:
          root: .
          paths:
            - coverage/lcov.info
      - store_test_results:
          path: test-results
  flutter-golden-test:
    macos:
      xcode: 13.0.0
    resource_class: medium
    steps:
      - when:
          # Execute only when the tag matches the word "run-golden"
          condition:
            matches:
              pattern: "^run-golden$"
              value: << pipeline.git.tag >>
          steps:
            - run: git push --delete origin run-golden
            - attach_workspace:
                at: .

            # Install Flutter SDK and run flutter pub get
            - flutter/install_sdk_and_pub:
                flutter_version: 2.10.3
            # Install your iOS cocoapods packages with automated caching and best practices
            - flutter/install_ios_pod
            # Install iOS Rubygems with automated caching and best practices
            # - flutter/install_ios_gem

            - run:
                name: Setup executable for flutter
                command: echo 'export PATH="$PATH:~/development/flutter/bin"' >> $BASH_ENV

            - run:
                name: Run golden tests
                command: flutter test --machine test/golden_tests --coverage

            - persist_to_workspace:
                root: .
                paths:
                  - coverage/lcov.info
  golden-tests-codecov-upload:
    executor: small-docker-image
    steps:
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: screens
          xtra_args: -v -Z

  code-coverage:
    executor: small-docker-image
    steps:
      - attach_workspace:
          at: .
      - codecov/upload:
          flags: screens
          xtra_args: -v -Z
      - codecov/upload:
          flags: services
          xtra_args: -v -Z
      - codecov/upload:
          flags: utilities
          xtra_args: -v -Z
      - codecov/upload:
          flags: widgets
          xtra_args: -v -Z
  flutter-analyze:
    executor: cirrusci-flutter
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run: flutter pub global activate junitreport
      - run: mkdir -p code-quality
      - run: touch code-quality/report.xml
      - run:
          name: Run flutter analyze
          command: flutter analyze
      - run:
          name: Run dart code metrics analyze
          command: flutter pub run dart_code_metrics:metrics analyze lib --fatal-style --fatal-performance --fatal-warnings --reporter=json | ~/.pub-cache/bin/tojunit --output code-quality/report.xml
      - store_test_results:
          path: code-quality

workflows:
  development-workflow:
    jobs:
      - checkout-and-setup:
          filters:
            branches:
              only:
                - /bugfix\/.*/
                - /feature\/.*/
                - /hotfix\/.*/
                - /release\/.*/
                - /temp\/.*/
      - flutter-widget-test:
          requires:
            - checkout-and-setup
      - flutter-golden-test:
          requires:
            - checkout-and-setup
      - golden-tests-codecov-upload:
          requires:
            - flutter-golden-test
      - flutter-analyze:
          requires:
            - checkout-and-setup
      - code-coverage:
          requires:
            - flutter-widget-test
